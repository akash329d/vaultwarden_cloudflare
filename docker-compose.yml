services:
  vaultwarden:
    image: vaultwarden/server:alpine
    restart: always
    volumes:
      - ${PWD}/vaultwarden/:/data/
    environment:
      - DOMAIN=https://${DOMAIN}
      - LOG_FILE=/data/vaultwarden.log
      - SMTP_FROM_NAME=Vaultwarden (${DOMAIN})
      - IP_HEADER=CF-Connecting-IP
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED
      - YUBICO_CLIENT_ID
      - YUBICO_SECRET_KEY
      - YUBICO_SERVER
      - ORG_CREATION_USERS
      

  cloudflared:
    image: cloudflare/cloudflared
    restart: always
    command: tunnel --no-autoupdate run --token ${CF_TUNNEL_TOKEN}
    depends_on:
      - vaultwarden

  rclone:
    image: rclone/rclone
    restart: always
    depends_on:
      - vaultwarden
    volumes:
      - ${PWD}/vaultwarden/:/data/
      - ${PWD}/backup/:/backup/
      - ${PWD}/backup_script:/etc/periodic/${BACKUP_FREQUENCY}/:ro
      - ${PWD}/rclone:/config/
    environment:
      - BACKUP_ENABLED
      - BACKUP_DIR
      - BACKUP_DATA_DIR
      - BACKUP_RCLONE_CONFIG
      - BACKUP_RCLONE_REMOTE_NAME
      - BACKUP_RCLONE_REMOTE_PATH
    entrypoint: ["/bin/sh" , "-c", "apk --update --no-cache add sqlite zip && crond -fS"] 

  fail2ban:
    image: crazymax/fail2ban
    restart: always
    depends_on:
    - vaultwarden
    environment:
    - PUID
    - PGID
    - CF_USER
    - CF_TOKEN
    - F2B_LOG_TARGET=/data/fail2ban.log
    volumes:
    - ${PWD}/fail2ban:/data
    - ${PWD}/vaultwarden:/vaultwarden:ro

  watchtower:
    image: containrrr/watchtower
    restart: always
    depends_on:
      - vaultwarden
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: true