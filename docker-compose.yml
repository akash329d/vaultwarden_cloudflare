services:
  vaultwarden:
    image: vaultwarden/server:alpine
    container_name: vaultwarden
    restart: always
    volumes:
      - ${PWD}/vaultwarden/:/data/
    environment:
      - DOMAIN=https://${DOMAIN}
      - LOG_FILE=/data/vaultwarden.log
      - SMTP_FROM_NAME=Vaultwarden (${DOMAIN})
      - IP_HEADER=CF-Connecting-IP
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED
      - YUBICO_CLIENT_ID
      - YUBICO_SECRET_KEY
      - YUBICO_SERVER
      - ORG_CREATION_USERS
    networks:
      - vwd

  cloudflared:
    image: cloudflare/cloudflared
    container_name: cloudflared
    restart: always
    command: tunnel --no-autoupdate run --token ${CF_TUNNEL_TOKEN}
    depends_on:
      - vaultwarden
    networks:
      - vwd

  rclone:
    image: rclone/rclone
    container_name: rclone
    restart: always
    depends_on:
      - vaultwarden
    volumes:
      - ${PWD}/vaultwarden/:/data/
      - ${PWD}/backup/:/backup/
      - ${PWD}/utils/backup.sh:/etc/periodic/${BACKUP_FREQUENCY}/backup:ro
      - ${PWD}/rclone:/config/
    environment:
      - BACKUP_ENABLED
      - BACKUP_DIR
      - BACKUP_DATA_DIR
      - BACKUP_RCLONE_CONFIG
      - BACKUP_RCLONE_REMOTE_NAME
      - BACKUP_RCLONE_REMOTE_PATH
      - TZ
    entrypoint: ["/bin/sh" , "-c", "apk --update --no-cache add sqlite zip && crond -fS"] 
    networks:
      - vwd

  fail2ban:
    image: crazymax/fail2ban
    container_name: fail2ban
    restart: always
    depends_on:
      - vaultwarden
    environment:
      - PUID
      - PGID
      - CF_USER
      - CF_TOKEN
      - F2B_LOG_TARGET=/data/fail2ban.log
      - TZ
    volumes:
      - ${PWD}/fail2ban:/data
      - ${PWD}/vaultwarden:/vaultwarden:ro
    networks:
      - vwd

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    depends_on:
      - vaultwarden
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - TZ
    networks:
      - vwd

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${PWD}//portainer:/data
    networks:
      - vwd

networks:
  vwd:
    name: vwd_network